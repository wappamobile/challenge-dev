USE wkenjico_test_wappa
GO

/***********************************************************************************************************************************
ADDRESS
***********************************************************************************************************************************/

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_ADDRESS_ADD')
	DROP PROCEDURE SP_ADDRESS_ADD
GO

CREATE PROCEDURE SP_ADDRESS_ADD (
	@NAME				VARCHAR(255)
	, @NUMBER			INT
	, @NEIGHBORHOOD		VARCHAR(255)
	, @POSTAL_CODE		VARCHAR(9)
	, @STATE			VARCHAR(2)
	, @LONGITUDE		DECIMAL(20,15)
	, @LATITUDE			DECIMAL(20,15)
	, @DRIVER_ID		INT
	, @CITY				VARCHAR(200)
	, @ID				INT OUTPUT)

AS
	BEGIN
		SELECT TOP 1 @ID = ID FROM TBL_ADDRESS WITH(NOLOCK) WHERE DRIVER_ID = @DRIVER_ID

		IF (@ID < 1 OR @ID IS NULL)
			BEGIN
				INSERT INTO TBL_ADDRESS VALUES (
					@NAME
					, @NUMBER
					, @NEIGHBORHOOD
					, @POSTAL_CODE
					, @STATE
					, @LONGITUDE
					, @LATITUDE
					, @DRIVER_ID
					, @CITY)

				SET @ID = SCOPE_IDENTITY()
			END

		RETURN @ID
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_ADDRESS_DEL')
	DROP PROCEDURE SP_ADDRESS_DEL
GO

CREATE PROCEDURE SP_ADDRESS_DEL (
	@ID				INT
	, @RETURN_CODE	INT OUTPUT)
AS
	BEGIN
		DELETE FROM TBL_ADDRESS WHERE ID = @ID

		SET @RETURN_CODE = @@ROWCOUNT

		RETURN @RETURN_CODE
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_ADDRESS_UP')
	DROP PROCEDURE SP_ADDRESS_UP
GO

CREATE PROCEDURE SP_ADDRESS_UP (
	@ID					INT
	, @NAME				VARCHAR(255)
	, @NUMBER			INT
	, @NEIGHBORHOOD		VARCHAR(255)
	, @POSTAL_CODE		VARCHAR(9)
	, @STATE			VARCHAR(2)
	, @LONGITUDE		DECIMAL(20,15)
	, @LATITUDE			DECIMAL(20,15)
	, @CITY				VARCHAR(200)
	, @RETURN_CODE		INT OUTPUT)
AS
	BEGIN
		UPDATE TBL_ADDRESS SET
			[NAME] =			@NAME
			, NUMBER =			@NUMBER
			, NEIGHBORHOOD =	@NEIGHBORHOOD
			, POSTAL_CODE =		@POSTAL_CODE
			, [STATE] =			@STATE
			, LONGITUDE =		@LONGITUDE
			, LATITUDE =		@LATITUDE
			, CITY =			@CITY
		WHERE ID = @ID

		SET @RETURN_CODE = @@ROWCOUNT

		RETURN @RETURN_CODE
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_ADDRESS_LOAD')
	DROP PROCEDURE SP_ADDRESS_LOAD
GO

CREATE PROCEDURE SP_ADDRESS_LOAD (@DRIVER_ID INT)
AS
	BEGIN
		SELECT ID
			, [NAME]
			, NUMBER
			, NEIGHBORHOOD
			, POSTAL_CODE
			, [STATE]
			, LONGITUDE
			, LATITUDE
			, CITY
		FROM TBL_ADDRESS WITH(NOLOCK)
		WHERE DRIVER_ID = @DRIVER_ID
	END
GO

/***********************************************************************************************************************************
CAR
***********************************************************************************************************************************/
IF EXISTS(sELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_CAR_ADD')
	DROP PROCEDURE SP_CAR_ADD
GO

CREATE PROCEDURE SP_CAR_ADD (
	@BRAND					VARCHAR(200)
	, @MODEL				VARCHAR(300)
	, @PLATE				VARCHAR(8)
	, @DRIVER_ID			INT
	, @ID					INT OUTPUT)
AS
	BEGIN

		SELECT TOP 1 @ID = ID FROM TBL_CAR WITH(NOLOCK) WHERE  DRIVER_ID = @DRIVER_ID
		
		IF (@ID < 1 OR @ID IS NULL)
			BEGIN
				INSERT INTO TBL_CAR VALUES (
					@BRAND
					, @MODEL
					, @PLATE
					, @DRIVER_ID)

				SET @ID = SCOPE_IDENTITY()
			END

		RETURN @ID
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_CAR_DEL')
	DROP PROCEDURE SP_CAR_DEL
GO

CREATE PROCEDURE SP_CAR_DEL (
	@ID				INT
	, @RETURN_CODE	INT OUTPUT)
AS
	BEGIN
		DELETE FROM TBL_CAR WHERE ID = @ID

		SET @RETURN_CODE = @@ROWCOUNT

		RETURN @RETURN_CODE
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_CAR_UP')
	DROP PROCEDURE SP_CAR_UP
GO

CREATE PROCEDURE SP_CAR_UP (
	@ID						INT
	, @BRAND				VARCHAR(200)
	, @MODEL				VARCHAR(300)
	, @PLATE				VARCHAR(8)
	, @RETURN_CODE			INT OUTPUT)
AS
	BEGIN
		UPDATE TBL_CAR SET
			BRAND = @BRAND
			, MODEL = @MODEL
			, PLATE = @PLATE
		WHERE ID = @ID

		SET @RETURN_CODE = @@ROWCOUNT

		RETURN @RETURN_CODE
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_CAR_LOAD')
	DROP PROCEDURE SP_CAR_LOAD
GO

CREATE PROCEDURE SP_CAR_LOAD (
	@DRIVER_ID			INT)
AS
	BEGIN
		SELECT ID
			, BRAND
			, MODEL
			, PLATE
		FROM TBL_CAR WITH(NOLOCK)
		WHERE DRIVER_ID = @DRIVER_ID
	END
GO

/***********************************************************************************************************************************
DRIVER
***********************************************************************************************************************************/
IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_DRIVER_ADD')
	DROP PROCEDURE SP_DRIVER_ADD
GO

CREATE PROCEDURE SP_DRIVER_ADD (
	@FIRST_NAME			VARCHAR(500)
	, @LAST_NAME		VARCHAR(500)
	, @ID				INT OUTPUT)
AS
	BEGIN
		SELECT TOP 1 @ID = ID FROM TBL_DRIVER WITH(NOLOCK) WHERE FIRST_NAME = @FIRST_NAME AND LAST_NAME = @LAST_NAME

		IF (@ID < 1 OR @ID IS NULL)
			BEGIN
				INSERT INTO TBL_DRIVER VALUES (
					@FIRST_NAME
					, @LAST_NAME)

				SET @ID = SCOPE_IDENTITY()
			END

		RETURN @ID
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_DRIVER_DEL')
	DROP PROCEDURE SP_DRIVER_DEL
GO

CREATE PROCEDURE SP_DRIVER_DEL (
	@ID				INT
	, @RETURN_CODE	INT OUTPUT)
AS
	BEGIN
		DELETE FROM TBL_ADDRESS WHERE DRIVER_ID = @ID
		DELETE FROM TBL_CAR WHERE DRIVER_ID = @ID
		DELETE FROM TBL_DRIVER WHERE ID = @ID

		SET @RETURN_CODE = @@ROWCOUNT

		RETURN @RETURN_CODE
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_DRIVER_UP')
	DROP PROCEDURE SP_DRIVER_UP
GO

CREATE PROCEDURE SP_DRIVER_UP (
	@ID					INT
	, @FIRST_NAME		VARCHAR(500)
	, @LAST_NAME		VARCHAR(500)
	, @RETURN_CODE		INT OUTPUT)
AS
	BEGIN
		UPDATE TBL_DRIVER SET
			FIRST_NAME = @FIRST_NAME
			, LAST_NAME = @LAST_NAME
		WHERE ID = @ID

		SET @RETURN_CODE = @@ROWCOUNT

		RETURN @RETURN_CODE
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_DRIVER_LOAD')
	DROP PROCEDURE SP_DRIVER_LOAD
GO

CREATE PROCEDURE SP_DRIVER_LOAD (
	@ID			INT)
AS
	BEGIN
		SELECT A.ID
			, A.FIRST_NAME
			, A.LAST_NAME
			, B.ID AS ADDRESS_ID
			, B.NAME AS ADDRESS_NAME
			, B.NUMBER AS ADDRESS_NUMBER
			, B.NEIGHBORHOOD AS ADDRESS_NEIGHBORHOOD
			, B.POSTAL_CODE AS ADDRESS_POSTAL_CODE
			, B.STATE AS ADDRESS_STATE
			, B.LONGITUDE AS ADDRESS_LONGITUDE
			, B.LATITUDE AS ADDRESS_LATITUDE
			, B.CITY AS ADDRESS_CITY
			, C.ID AS CAR_ID
			, C.BRAND AS CAR_BRAND
			, C.MODEL AS CAR_MODEL
			, C.PLATE AS CAR_PLATE
		FROM TBL_DRIVER AS A WITH(NOLOCK)
			LEFT JOIN TBL_ADDRESS AS B WITH(NOLOCK)
				ON B.DRIVER_ID = A.ID
			LEFT JOIN TBL_CAR AS C WITH(NOLOCK)
				ON C.DRIVER_ID = A.ID
		WHERE A.ID = @ID
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_DRIVER_LIST_FIRST_NAME')
	DROP PROCEDURE SP_DRIVER_LIST_FIRST_NAME
GO

CREATE PROCEDURE SP_DRIVER_LIST_FIRST_NAME (
	@ROW_INDEX		INT
	, @ROW_GET	INT)
AS
	BEGIN
		SELECT A.ID
			, A.FIRST_NAME
			, A.LAST_NAME
			, B.ID AS ADDRESS_ID
			, B.NAME AS ADDRESS_NAME
			, B.NUMBER AS ADDRESS_NUMBER
			, B.NEIGHBORHOOD AS ADDRESS_NEIGHBORHOOD
			, B.POSTAL_CODE AS ADDRESS_POSTAL_CODE
			, B.STATE AS ADDRESS_STATE
			, B.LONGITUDE AS ADDRESS_LONGITUDE
			, B.LATITUDE AS ADDRESS_LATITUDE
			, B.CITY AS ADDRESS_CITY
			, C.ID AS CAR_ID
			, C.BRAND AS CAR_BRAND
			, C.MODEL AS CAR_MODEL
			, C.PLATE AS CAR_PLATE
		FROM TBL_DRIVER AS A WITH(NOLOCK)
			LEFT JOIN TBL_ADDRESS AS B WITH(NOLOCK)
				ON B.DRIVER_ID = A.ID
			LEFT JOIN TBL_CAR AS C WITH(NOLOCK)
				ON C.DRIVER_ID = A.ID
		ORDER BY A.FIRST_NAME
		OFFSET @ROW_INDEX ROWS
		FETCH NEXT @ROW_GET ROWS ONLY OPTION (RECOMPILE);
	END
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WITH(NOLOCK) WHERE XTYPE = 'P' AND NAME = 'SP_DRIVER_LIST_LAST_NAME')
	DROP PROCEDURE SP_DRIVER_LIST_LAST_NAME
GO

CREATE PROCEDURE SP_DRIVER_LIST_LAST_NAME (
	@ROW_INDEX		INT
	, @ROW_GET	INT)
AS
	BEGIN
		SELECT A.ID
			, A.FIRST_NAME
			, A.LAST_NAME
			, B.ID AS ADDRESS_ID
			, B.NAME AS ADDRESS_NAME
			, B.NUMBER AS ADDRESS_NUMBER
			, B.NEIGHBORHOOD AS ADDRESS_NEIGHBORHOOD
			, B.POSTAL_CODE AS ADDRESS_POSTAL_CODE
			, B.STATE AS ADDRESS_STATE
			, B.LONGITUDE AS ADDRESS_LONGITUDE
			, B.LATITUDE AS ADDRESS_LATITUDE
			, B.CITY AS ADDRESS_CITY
			, C.ID AS CAR_ID
			, C.BRAND AS CAR_BRAND
			, C.MODEL AS CAR_MODEL
			, C.PLATE AS CAR_PLATE
		FROM TBL_DRIVER AS A WITH(NOLOCK)
			LEFT JOIN TBL_ADDRESS AS B WITH(NOLOCK)
				ON B.DRIVER_ID = A.ID
			LEFT JOIN TBL_CAR AS C WITH(NOLOCK)
				ON C.DRIVER_ID = A.ID
		ORDER BY A.LAST_NAME
		OFFSET @ROW_INDEX ROWS
		FETCH NEXT @ROW_GET ROWS ONLY OPTION (RECOMPILE);
	END
GO